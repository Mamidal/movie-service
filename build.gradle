buildscript {
    ext {
        springBootVersion = '1.2.4.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
        classpath("net.serenity-bdd:serenity-gradle-plugin:1.0.53")
        classpath 'org.cloudfoundry:cf-gradle-plugin:1.1.2'
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'cloudfoundry'

jar {
    baseName = 'movie-service'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
}

def serenityCoreVersion = "1.0.56"

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile "org.apache.commons:commons-lang3:3.4"

    compile 'io.springfox:springfox-swagger2:2.0.1'
    compile 'io.springfox:springfox-swagger-ui:2.0.1'

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile "net.serenity-bdd:serenity-core:${serenityCoreVersion}"
    testCompile "net.serenity-bdd:serenity-spring:${serenityCoreVersion}"
    testCompile "net.serenity-bdd:serenity-rest-assured:${serenityCoreVersion}"
    testCompile "net.serenity-bdd:serenity-cucumber:1.0.16"
    testCompile "org.codehaus.groovy:groovy-all:2.3.6"
    testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
    testCompile "org.spockframework:spock-spring:0.7-groovy-2.0"
    testCompile "org.assertj:assertj-core:3.0.0"
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

test {
    exclude '**/integration/**'
    exclude '**/features/**'
    maxParallelForks = 4
}

task integrationTests(type: Test) {
    include '**/integration/**'
}


task acceptanceTests(type: Test) {
    include '**/features/**'
}

acceptanceTests.mustRunAfter integrationTests
integrationTests.mustRunAfter test
aggregate.mustRunAfter acceptanceTests

task verify {}

verify.dependsOn('test', 'integrationTests', 'acceptanceTests', 'aggregate')

cloudfoundry {
    target = "https://api.run.pivotal.io"
    space = "production"
    file = file("build/libs/movie-service-${jar.version}.jar")
}
